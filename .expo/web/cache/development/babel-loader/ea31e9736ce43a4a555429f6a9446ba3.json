{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useReducer, useContext } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TodoContext } from \"./todoContext\";\nimport { todoReducer } from \"./todoReducer\";\nimport { ADD_TODO, REMOVE_TODO, UPDATE_TODO } from \"../types\";\nimport { ScreenContext } from \"../screen/screenContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var TodoState = function TodoState(_ref) {\n  var children = _ref.children;\n  var initialState = {\n    todos: [{\n      id: \"1\",\n      title: \"Выучить React Native\"\n    }]\n  };\n\n  var _useContext = useContext(ScreenContext),\n      changeScreen = _useContext.changeScreen;\n\n  var _useReducer = useReducer(todoReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var addTodo = function addTodo(title) {\n    return dispatch({\n      type: ADD_TODO,\n      title: title\n    });\n  };\n\n  var removeTodo = function removeTodo(id) {\n    var todo = state.todos.find(function (t) {\n      return t.id === id;\n    });\n    Alert.alert(\"Удаление элемента\", \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B, \\u0447\\u0442\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\\"\" + todo.title + \"\\\"?\", [{\n      text: \"Отмена\",\n      style: \"cancel\"\n    }, {\n      text: \"Удалить\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        changeScreen(null);\n        dispatch({\n          type: REMOVE_TODO,\n          id: id\n        });\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var updateTodo = function updateTodo(id, title) {\n    return dispatch({\n      type: UPDATE_TODO,\n      id: id,\n      title: title\n    });\n  };\n\n  return _jsx(TodoContext.Provider, {\n    value: {\n      todos: state.todos,\n      addTodo: addTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    },\n    children: children\n  });\n};","map":{"version":3,"sources":["/home/siyazov/Документы/rn-projects/todo-app/src/context/todo/TodoState.js"],"names":["React","useReducer","useContext","TodoContext","todoReducer","ADD_TODO","REMOVE_TODO","UPDATE_TODO","ScreenContext","TodoState","children","initialState","todos","id","title","changeScreen","state","dispatch","addTodo","type","removeTodo","todo","find","t","Alert","alert","text","style","onPress","cancelable","updateTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;;AAEA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC;AACA,SAASC,aAAT;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACzC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,EAAE,EAAE,GAAN;AAAWC,MAAAA,KAAK,EAAE;AAAlB,KAAD;AADY,GAArB;;AAGA,oBAAyBZ,UAAU,CAACM,aAAD,CAAnC;AAAA,MAAQO,YAAR,eAAQA,YAAR;;AACA,oBAA0Bd,UAAU,CAACG,WAAD,EAAcO,YAAd,CAApC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACJ,KAAD;AAAA,WAAWG,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEd,QAAR;AAAkBS,MAAAA,KAAK,EAALA;AAAlB,KAAD,CAAnB;AAAA,GAAhB;;AAEA,MAAMM,UAAU,GAAG,SAAbA,UAAa,CAACP,EAAD,EAAQ;AACzB,QAAMQ,IAAI,GAAGL,KAAK,CAACJ,KAAN,CAAYU,IAAZ,CAAiB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACV,EAAF,KAASA,EAAhB;AAAA,KAAjB,CAAb;AACAW,IAAAA,KAAK,CAACC,KAAN,CACE,mBADF,qKAEqCJ,IAAI,CAACP,KAF1C,UAGE,CACE;AACEY,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,KAAK,EAAE;AAFT,KADF,EAKE;AACED,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,KAAK,EAAE,aAFT;AAGEC,MAAAA,OAAO,EAAE,mBAAM;AACbb,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,QAAAA,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAEb,WAAR;AAAqBO,UAAAA,EAAE,EAAFA;AAArB,SAAD,CAAR;AACD;AANH,KALF,CAHF,EAiBE;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAjBF;AAmBD,GArBD;;AAuBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACjB,EAAD,EAAKC,KAAL;AAAA,WAAeG,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,WAAR;AAAqBM,MAAAA,EAAE,EAAFA,EAArB;AAAyBC,MAAAA,KAAK,EAALA;AAAzB,KAAD,CAAvB;AAAA,GAAnB;;AAEA,SACE,KAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELM,MAAAA,OAAO,EAAPA,OAFK;AAGLE,MAAAA,UAAU,EAAVA,UAHK;AAILU,MAAAA,UAAU,EAAVA;AAJK,KADT;AAAA,cAQGpB;AARH,IADF;AAYD,CA9CM","sourcesContent":["import React, { useReducer, useContext } from \"react\";\nimport { Alert } from \"react-native\";\nimport { TodoContext } from \"./todoContext\";\nimport { todoReducer } from \"./todoReducer\";\nimport { ADD_TODO, REMOVE_TODO, UPDATE_TODO } from \"../types\";\nimport { ScreenContext } from \"../screen/screenContext\";\n\nexport const TodoState = ({ children }) => {\n  const initialState = {\n    todos: [{ id: \"1\", title: \"Выучить React Native\" }],\n  };\n  const { changeScreen } = useContext(ScreenContext);\n  const [state, dispatch] = useReducer(todoReducer, initialState);\n\n  const addTodo = (title) => dispatch({ type: ADD_TODO, title });\n\n  const removeTodo = (id) => {\n    const todo = state.todos.find((t) => t.id === id);\n    Alert.alert(\n      \"Удаление элемента\",\n      `Вы уверены, что хотите удалить \"${todo.title}\"?`,\n      [\n        {\n          text: \"Отмена\",\n          style: \"cancel\",\n        },\n        {\n          text: \"Удалить\",\n          style: \"destructive\",\n          onPress: () => {\n            changeScreen(null);\n            dispatch({ type: REMOVE_TODO, id });\n          },\n        },\n      ],\n      { cancelable: false }\n    );\n  };\n\n  const updateTodo = (id, title) => dispatch({ type: UPDATE_TODO, id, title });\n\n  return (\n    <TodoContext.Provider\n      value={{\n        todos: state.todos,\n        addTodo,\n        removeTodo,\n        updateTodo,\n      }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}