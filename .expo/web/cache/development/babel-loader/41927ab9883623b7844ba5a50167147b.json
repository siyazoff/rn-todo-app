{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome, AntDesign } from \"@expo/vector-icons\";\nimport { THEME } from \"../theme\";\nimport { AppCard } from \"../components/ui/AppCard\";\nimport { EditModal } from \"../components/EditModal\";\nimport { AppTextBold } from \"../components/ui/AppTextBold\";\nimport { AppButton } from \"../components/ui/AppButton\";\nimport { TodoContext } from \"../context/todo/todoContext\";\nimport { ScreenContext } from \"../context/screen/screenContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var TodoScreen = function TodoScreen() {\n  var _useContext = useContext(TodoContext),\n      todos = _useContext.todos,\n      updateTodo = _useContext.updateTodo,\n      removeTodo = _useContext.removeTodo;\n\n  var _useContext2 = useContext(ScreenContext),\n      todoId = _useContext2.todoId,\n      changeScreen = _useContext2.changeScreen;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var todo = todos.find(function (t) {\n    return t.id === todoId;\n  });\n\n  var saveHandler = function saveHandler(title) {\n    updateTodo(todo.id, title);\n    setModal(false);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(EditModal, {\n      value: todo.title,\n      visible: modal,\n      onCancel: function onCancel() {\n        return setModal(false);\n      },\n      onSave: saveHandler\n    }), _jsxs(AppCard, {\n      style: styles.card,\n      children: [_jsx(AppTextBold, {\n        style: styles.title,\n        children: todo.title\n      }), _jsx(AppButton, {\n        onPress: function onPress() {\n          return setModal(true);\n        },\n        children: _jsx(FontAwesome, {\n          name: \"edit\",\n          size: 20\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(View, {\n        style: styles.button,\n        children: _jsx(AppButton, {\n          onPress: function onPress() {\n            return changeScreen(null);\n          },\n          color: THEME.GREY_COLOR,\n          children: _jsx(AntDesign, {\n            name: \"back\",\n            size: 20,\n            color: \"#fff\"\n          })\n        })\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(AppButton, {\n          color: THEME.DANGER_COLOR,\n          onPress: function onPress() {\n            return removeTodo(todo.id);\n          },\n          children: _jsx(FontAwesome, {\n            name: \"remove\",\n            size: 20,\n            color: \"#fff\"\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  buttons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15\n  },\n  button: {\n    width: Dimensions.get(\"window\").width > 400 ? 150 : 100\n  },\n  title: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/siyazov/Документы/rn-projects/todo-app/src/screens/TodoScreen.js"],"names":["React","useState","useContext","FontAwesome","AntDesign","THEME","AppCard","EditModal","AppTextBold","AppButton","TodoContext","ScreenContext","TodoScreen","todos","updateTodo","removeTodo","todoId","changeScreen","modal","setModal","todo","find","t","id","saveHandler","title","styles","card","buttons","button","GREY_COLOR","DANGER_COLOR","StyleSheet","create","flexDirection","justifyContent","marginBottom","padding","width","Dimensions","get","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { StyleSheet, View, Button, Dimensions } from \"react-native\";\nimport { FontAwesome, AntDesign } from \"@expo/vector-icons\";\nimport { THEME } from \"../theme\";\nimport { AppCard } from \"../components/ui/AppCard\";\nimport { EditModal } from \"../components/EditModal\";\nimport { AppTextBold } from \"../components/ui/AppTextBold\";\nimport { AppButton } from \"../components/ui/AppButton\";\nimport { TodoContext } from \"../context/todo/todoContext\";\nimport { ScreenContext } from \"../context/screen/screenContext\";\n\nexport const TodoScreen = () => {\n  const { todos, updateTodo, removeTodo } = useContext(TodoContext);\n  const { todoId, changeScreen } = useContext(ScreenContext);\n  const [modal, setModal] = useState(false);\n\n  const todo = todos.find((t) => t.id === todoId);\n\n  const saveHandler = (title) => {\n    updateTodo(todo.id, title);\n    setModal(false);\n  };\n\n  return (\n    <View>\n      <EditModal\n        value={todo.title}\n        visible={modal}\n        onCancel={() => setModal(false)}\n        onSave={saveHandler}\n      />\n\n      <AppCard style={styles.card}>\n        <AppTextBold style={styles.title}>{todo.title}</AppTextBold>\n        <AppButton onPress={() => setModal(true)}>\n          <FontAwesome name=\"edit\" size={20} />\n        </AppButton>\n      </AppCard>\n\n      <View style={styles.buttons}>\n        <View style={styles.button}>\n          <AppButton\n            onPress={() => changeScreen(null)}\n            color={THEME.GREY_COLOR}\n          >\n            <AntDesign name=\"back\" size={20} color=\"#fff\" />\n          </AppButton>\n        </View>\n        <View style={styles.button}>\n          <AppButton\n            color={THEME.DANGER_COLOR}\n            onPress={() => removeTodo(todo.id)}\n          >\n            <FontAwesome name=\"remove\" size={20} color=\"#fff\" />\n          </AppButton>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15,\n  },\n  button: {\n    // width: Dimensions.get('window').width / 3\n    width: Dimensions.get(\"window\").width > 400 ? 150 : 100,\n  },\n  title: {\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}