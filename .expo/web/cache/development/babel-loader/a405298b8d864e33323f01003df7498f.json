{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AppTextBold } from \"./AppTextBold\";\nimport { THEME } from \"../../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var AppButton = function AppButton(_ref) {\n  var children = _ref.children,\n      onPress = _ref.onPress,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? THEME.MAIN_COLOR : _ref$color;\n  var Wrapper = Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n  return _jsx(Wrapper, {\n    onPress: onPress,\n    activeOpacity: 0.7,\n    children: _jsx(View, {\n      style: _objectSpread(_objectSpread({}, styles.button), {}, {\n        backgroundColor: color\n      }),\n      children: _jsx(AppTextBold, {\n        style: styles.text,\n        children: children\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/home/siyazov/Документы/rn-projects/todo-app/src/components/ui/AppButton.js"],"names":["React","AppTextBold","THEME","AppButton","children","onPress","color","MAIN_COLOR","Wrapper","Platform","OS","TouchableNativeFeedback","TouchableOpacity","styles","button","backgroundColor","text","StyleSheet","create","paddingHorizontal","paddingVertical","borderRadius","flexDirection","alignItems","justifyContent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,WAAT;AACA,SAASC,KAAT;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAqD;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,OAAwC,QAAxCA,OAAwC;AAAA,wBAA/BC,KAA+B;AAAA,MAA/BA,KAA+B,2BAAvBJ,KAAK,CAACK,UAAiB;AAC5E,MAAMC,OAAO,GACXC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,uBAA5B,GAAsDC,gBADxD;AAGA,SACE,KAAC,OAAD;AAAS,IAAA,OAAO,EAAEP,OAAlB;AAA2B,IAAA,aAAa,EAAE,GAA1C;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,kCAAOQ,MAAM,CAACC,MAAd;AAAsBC,QAAAA,eAAe,EAAET;AAAvC,QAAX;AAAA,gBACE,KAAC,WAAD;AAAa,QAAA,KAAK,EAAEO,MAAM,CAACG,IAA3B;AAAA,kBAAkCZ;AAAlC;AADF;AADF,IADF;AAOD,CAXM;AAaP,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,iBAAiB,EAAE,EADb;AAENC,IAAAA,eAAe,EAAE,EAFX;AAGNC,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE,KAJT;AAKNC,IAAAA,UAAU,EAAE,QALN;AAMNC,IAAAA,cAAc,EAAE;AANV,GADuB;AAS/BR,EAAAA,IAAI,EAAE;AACJV,IAAAA,KAAK,EAAE;AADH;AATyB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  Platform,\n} from \"react-native\";\nimport { AppTextBold } from \"./AppTextBold\";\nimport { THEME } from \"../../theme\";\n\nexport const AppButton = ({ children, onPress, color = THEME.MAIN_COLOR }) => {\n  const Wrapper =\n    Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n\n  return (\n    <Wrapper onPress={onPress} activeOpacity={0.7}>\n      <View style={{ ...styles.button, backgroundColor: color }}>\n        <AppTextBold style={styles.text}>{children}</AppTextBold>\n      </View>\n    </Wrapper>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}