{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { TodoState } from \"./src/context/todo/TodoState\";\nimport { ScreenState } from \"./src/context/screen/ScreenState\";\nimport { MainLayout } from \"./src/MainLayout\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction loadApplication() {\n  return _regeneratorRuntime.async(function loadApplication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            \"roboto-regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n            \"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\")\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (!isReady) {\n    return _jsx(AppLoading, {\n      startAsync: loadApplication,\n      onError: function onError(err) {\n        return console.log(err);\n      },\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      }\n    });\n  }\n\n  return _jsx(ScreenState, {\n    children: _jsx(TodoState, {\n      children: _jsx(MainLayout, {})\n    })\n  });\n}","map":{"version":3,"sources":["/home/siyazov/Документы/rn-projects/todo-app/App.js"],"names":["React","useState","Font","AppLoading","TodoState","ScreenState","MainLayout","loadApplication","loadAsync","require","App","isReady","setIsReady","err","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,SAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;;;AAEA,SAAeC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQL,IAAI,CAACM,SAAL,CAAe;AACnB,8BAAkBC,OAAO,qCADN;AAEnB,2BAAeA,OAAO;AAFH,WAAf,CADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA8BT,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,KAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,eADd;AAEE,MAAA,OAAO,EAAE,iBAACM,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OAFX;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA;AAHZ,MADF;AAOD;;AAED,SACE,KAAC,WAAD;AAAA,cACE,KAAC,SAAD;AAAA,gBACE,KAAC,UAAD;AADF;AADF,IADF;AAOD","sourcesContent":["import React, { useState } from \"react\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\n\nimport { TodoState } from \"./src/context/todo/TodoState\";\nimport { ScreenState } from \"./src/context/screen/ScreenState\";\nimport { MainLayout } from \"./src/MainLayout\";\n\nasync function loadApplication() {\n  await Font.loadAsync({\n    \"roboto-regular\": require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    \"roboto-bold\": require(\"./assets/fonts/Roboto-Bold.ttf\"),\n  });\n}\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  if (!isReady) {\n    return (\n      <AppLoading\n        startAsync={loadApplication}\n        onError={(err) => console.log(err)}\n        onFinish={() => setIsReady(true)}\n      />\n    );\n  }\n\n  return (\n    <ScreenState>\n      <TodoState>\n        <MainLayout />\n      </TodoState>\n    </ScreenState>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}