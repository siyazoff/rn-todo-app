{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { THEME } from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var AddTodo = function AddTodo(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var pressHandler = function pressHandler() {\n    if (value.trim()) {\n      onSubmit(value);\n      setValue(\"\");\n      Keyboard.dismiss();\n    } else {\n      Alert.alert(\"Название дела не может быть пустым\");\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.block,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setValue,\n      value: value,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0435\\u043B\\u0430...\",\n      autoCorrect: false,\n      autoCapitalize: \"none\"\n    }), _jsx(AntDesign.Button, {\n      onPress: pressHandler,\n      name: \"pluscircleo\",\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  block: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 15\n  },\n  input: {\n    width: \"60%\",\n    padding: 10,\n    borderStyle: \"solid\",\n    borderBottomWidth: 2,\n    borderBottomColor: THEME.MAIN_COLOR\n  }\n});","map":{"version":3,"sources":["/home/siyazov/Документы/rn-projects/todo-app/src/components/AddTodo.js"],"names":["React","useState","AntDesign","THEME","AddTodo","onSubmit","value","setValue","pressHandler","trim","Keyboard","dismiss","Alert","alert","styles","block","input","StyleSheet","create","flexDirection","justifyContent","alignItems","marginBottom","width","padding","borderStyle","borderBottomWidth","borderBottomColor","MAIN_COLOR"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT;;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvC,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIF,KAAK,CAACG,IAAN,EAAJ,EAAkB;AAChBJ,MAAAA,QAAQ,CAACC,KAAD,CAAR;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,MAAAA,QAAQ,CAACC,OAAT;AACD,KAJD,MAIO;AACLC,MAAAA,KAAK,CAACC,KAAN,CAAY,oCAAZ;AACD;AACF,GARD;;AAUA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA,eACE,KAAC,SAAD;AACE,MAAA,KAAK,EAAED,MAAM,CAACE,KADhB;AAEE,MAAA,YAAY,EAAET,QAFhB;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,WAAW,EAAC,yHAJd;AAKE,MAAA,WAAW,EAAE,KALf;AAME,MAAA,cAAc,EAAC;AANjB,MADF,EASE,KAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,OAAO,EAAEE,YAA3B;AAAyC,MAAA,IAAI,EAAC,aAA9C;AAAA;AAAA,MATF;AAAA,IADF;AAgBD,CA7BM;AA+BP,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,KAAK,EAAE;AACLI,IAAAA,aAAa,EAAE,KADV;AAELC,IAAAA,cAAc,EAAE,eAFX;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,YAAY,EAAE;AAJT,GADwB;AAO/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,OAAO,EAAE,EAFJ;AAGLC,IAAAA,WAAW,EAAE,OAHR;AAILC,IAAAA,iBAAiB,EAAE,CAJd;AAKLC,IAAAA,iBAAiB,EAAExB,KAAK,CAACyB;AALpB;AAPwB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  Button,\n  Alert,\n  Keyboard,\n} from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { THEME } from \"../theme\";\n\nexport const AddTodo = ({ onSubmit }) => {\n  const [value, setValue] = useState(\"\");\n\n  const pressHandler = () => {\n    if (value.trim()) {\n      onSubmit(value);\n      setValue(\"\");\n      Keyboard.dismiss();\n    } else {\n      Alert.alert(\"Название дела не может быть пустым\");\n    }\n  };\n\n  return (\n    <View style={styles.block}>\n      <TextInput\n        style={styles.input}\n        onChangeText={setValue}\n        value={value}\n        placeholder=\"Введите название дела...\"\n        autoCorrect={false}\n        autoCapitalize=\"none\"\n      />\n      <AntDesign.Button onPress={pressHandler} name=\"pluscircleo\">\n        Добавить\n      </AntDesign.Button>\n      {/* <Button title='Добавить' onPress={pressHandler} /> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 15,\n  },\n  input: {\n    width: \"60%\",\n    padding: 10,\n    borderStyle: \"solid\",\n    borderBottomWidth: 2,\n    borderBottomColor: THEME.MAIN_COLOR,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}